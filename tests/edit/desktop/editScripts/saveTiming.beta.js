module.exports = async function ( context, commands ) {

	commands.meta.setTitle( 'Test edit a page on beta' );
	commands.meta.setDescription(
		'At the moment we only focus on the backend metrics collected internally.'
	);
	await commands.navigate(
		'https://en.wikipedia.beta.wmflabs.org/w/index.php?title=Special:UserLogin&returnto=User:Wptuser&returntoquery=gettingStartedReturn%3Dtrue'
	);

	// Pickup the user name and password from our configuration
	const userName = context.options.wikipedia.user,
		password = context.options.wikipedia.password,
		waitTime = 5000,
		webdriver = context.selenium.webdriver,
		driver = context.selenium.driver;

	// Login the user
	try {
		await commands.addText.byId( userName, 'wpName1' );
		await commands.addText.byId( password, 'wpPassword1' );
		await commands.click.byIdAndWait( 'wpLoginAttempt' );
	} catch ( e ) {
		context.log.error( 'Failed to login', e );
		await commands.screenshot.take( 'login-error' );
		throw e;
	}
	// Go to the users home page
	await commands.navigate( 'https://en.wikipedia.beta.wmflabs.org/wiki/User:Wptuser' );

	// Edit the page
	try {
		await commands.click.byPartialLinkText( 'Edit' );
		await commands.wait.byTime( waitTime );
		const editField = await driver.findElement( webdriver.By.id( 'mwAg' ) );
		await editField.clear();
		await editField.sendKeys( 'Edited:' + ( new Date() ).toString() );

		await commands.wait.byTime( waitTime );

		// Click the save button
		let saveButton = await commands.js.run(
			"return document.getElementsByClassName('oo-ui-tool-link ve-ui-toolbar-saveButton')[0];"
		);
		await saveButton.click();
		await commands.wait.byTime( waitTime * 2 );
	} catch ( e ) {
		context.log.error( 'Failed to save', e );
		await commands.screenshot.take( 'save-error' );
		throw e;
	}

	// Add the save comment
	try {
		await commands.js.run(
			"document.getElementsByTagName('textarea')[0].value ='Generated by wptuser';"
		);
		await commands.wait.byTime( 1000 );
	} catch ( e ) {
		context.log.error( 'Failed add save comment', e );
		await commands.screenshot.take( 'save-comment-error' );
		throw e;
	}
	// Push the save button
	// eslint-disable-next-line one-var
	let possibleSubmits = await commands.js.run(
		"return document.getElementsByClassName('oo-ui-labelElement-label');"
	);
	try {
		for ( let a of possibleSubmits ) {
			if ( ( await a.getText() ) === 'Publish changes' ) {
				await commands.measure.start( 'saveBeta' );
				await a.click();
			}
		}
		await commands.wait.byTime( waitTime );
	} catch ( e ) {
		context.log.error( 'Failed click in publish changes', e );
		await commands.screenshot.take( 'publish-error' );
		throw e;
	}
	return commands.measure.stop();
};
